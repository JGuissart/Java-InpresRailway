/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package InterfaceGraphique;

import javax.swing.JOptionPane;

/**
 *
 * @author Julien
 */
public class FenReglageTemps extends javax.swing.JDialog
{
    private int Temps;
    private int Retard;
    private int Manifestation;
    private int Greve;
    private boolean Valide;
    
    /**
     * Creates new form FenReglageTemps
     */
    @SuppressWarnings("OverridableMethodCallInConstructor")
    public FenReglageTemps(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        setTitle("Réglages des temps");
        
        Temps = 0;
        Retard = 0;
        Manifestation = 0;
        Greve = 0;
        
        cbTempsIncidents.addItem(1);
        
        for (int i = 5; i <= 35; i += 5)
            cbTempsIncidents.addItem(i);
        
        cbRetard.addItem(0);
        cbManif.addItem(0);
        cbGreve.addItem(0);
        
        for (int i = 2; i <= 31; i++)
        {
            if (isPremier(i))
            {
                cbRetard.addItem(i);
                cbManif.addItem(i);
                cbGreve.addItem(i);
            }
        }
    }
    
    public boolean isPremier(int n) // permet de définir si le nombre passé en paramètre est un nombre premier ou non
    {
            boolean isPremier = true;

            if (n < 0)
                    isPremier = false;
            else if (n != 0 && n != 1)
            {
                    for (int i = 2; i <= n / 2; i++)
                    {
                            if (n != i && n % i == 0) 
                            {
                                    isPremier = false;
                                    break;
                            }
                    }
            }
            return isPremier;
    }
    
    private boolean Verification()
    {
        if (Retard != Manifestation && Retard != Greve && Manifestation != Greve)
            return true;
        else
            return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTempsIncidents = new javax.swing.JLabel();
        cbTempsIncidents = new javax.swing.JComboBox();
        lbRetard = new javax.swing.JLabel();
        lbManif = new javax.swing.JLabel();
        lbGreve = new javax.swing.JLabel();
        cbRetard = new javax.swing.JComboBox();
        cbManif = new javax.swing.JComboBox();
        cbGreve = new javax.swing.JComboBox();
        btValider = new javax.swing.JButton();
        btAnnuler = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lbTempsIncidents.setText("Temps d'attente entre chaque incidents: ");

        cbTempsIncidents.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTempsIncidentsItemStateChanged(evt);
            }
        });

        lbRetard.setText("Retard (multiple de ...): ");

        lbManif.setText("Manifestation (multiple de ...): ");

        lbGreve.setText("Grève (multiple de ...): ");

        cbRetard.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbRetardItemStateChanged(evt);
            }
        });

        cbManif.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbManifItemStateChanged(evt);
            }
        });

        cbGreve.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbGreveItemStateChanged(evt);
            }
        });

        btValider.setText("Valider");
        btValider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btValiderActionPerformed(evt);
            }
        });

        btAnnuler.setText("Annuler");
        btAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnnulerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lbGreve, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbManif, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbRetard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbTempsIncidents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbTempsIncidents, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbRetard, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbManif, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbGreve, 0, 87, Short.MAX_VALUE))
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btValider, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btAnnuler, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTempsIncidents)
                    .addComponent(cbTempsIncidents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbRetard)
                    .addComponent(cbRetard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbManif)
                    .addComponent(cbManif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbGreve)
                    .addComponent(cbGreve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btValider)
                    .addComponent(btAnnuler))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbRetardItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbRetardItemStateChanged
        Retard = (Integer)cbRetard.getSelectedItem();
//        if ((Integer)cbRetard.getSelectedItem() != 0)
//        {
//            Retard = (Integer)cbRetard.getSelectedItem();
//
//            cbManif.removeAllItems();
//            cbManif.addItem(0);
//            cbGreve.removeAllItems();
//            cbGreve.addItem(0);
//            
//            for (int i = 2; i <= 31; i++)
//            {
//                if (isPremier(i))
//                {
//                    cbManif.addItem(i);
//                    cbGreve.addItem(i);
//                }
//            }
//
//            cbManif.removeItem(Retard);
//            cbGreve.removeItem(Retard);
//
//            if (Greve != 0)
//                cbManif.removeItem(Greve);
//            if (Manifestation != 0)
//                cbGreve.removeItemAt(Manifestation);
//        }
    }//GEN-LAST:event_cbRetardItemStateChanged

    private void cbManifItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbManifItemStateChanged
        Manifestation = (Integer)cbManif.getSelectedItem();
//        if ((Integer)cbManif.getSelectedItem() != 0)
//        {
//            Manifestation = (Integer)cbManif.getSelectedItem();
//        
//            cbRetard.removeAllItems();
//            cbRetard.addItem(0);
//            cbGreve.removeAllItems();
//            cbGreve.addItem(0);
//
//            for (int i = 2; i <= 31; i++)
//            {
//                if (isPremier(i))
//                {
//                    cbRetard.addItem(i);
//                    cbGreve.addItem(i);
//                }
//            }
//
//            cbRetard.removeItem(Manifestation);
//            cbGreve.removeItem(Manifestation);
//
//            if (Retard != 0)
//                cbGreve.removeItem(Retard);
//            if (Greve != 0)
//                cbRetard.removeItem(Greve);
//        }
    }//GEN-LAST:event_cbManifItemStateChanged

    private void cbGreveItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbGreveItemStateChanged
        Greve = (Integer)cbGreve.getSelectedItem();
//        if ((Integer)cbGreve.getSelectedItem() != 0)
//        {
//            Greve = (Integer)cbGreve.getSelectedItem();
//        
//            cbRetard.removeAllItems();
//            cbRetard.addItem(0);
//            cbManif.removeAllItems();
//            cbManif.addItem(0);
//
//            for (int i = 2; i <= 31; i++)
//            {
//                if (isPremier(i))
//                {
//                    cbManif.addItem(i);
//                    cbRetard.addItem(i);
//                }
//            }
//
//            cbRetard.removeItem(Greve);
//            cbManif.removeItem(Greve);
//
//            if (Retard != 0)
//                cbManif.removeItem(Retard);
//            if (Manifestation != 0)
//                cbRetard.removeItem(Manifestation);
//        }
    }//GEN-LAST:event_cbGreveItemStateChanged

    private void btValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btValiderActionPerformed
        Valide = Verification();
        this.dispose();
    }//GEN-LAST:event_btValiderActionPerformed

    private void btAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnnulerActionPerformed
        Valide = false;
        this.dispose();
    }//GEN-LAST:event_btAnnulerActionPerformed

    private void cbTempsIncidentsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTempsIncidentsItemStateChanged
        Temps = (Integer)cbTempsIncidents.getSelectedItem();
    }//GEN-LAST:event_cbTempsIncidentsItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenReglageTemps.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenReglageTemps.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenReglageTemps.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenReglageTemps.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FenReglageTemps dialog = new FenReglageTemps(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAnnuler;
    private javax.swing.JButton btValider;
    private javax.swing.JComboBox cbGreve;
    private javax.swing.JComboBox cbManif;
    private javax.swing.JComboBox cbRetard;
    private javax.swing.JComboBox cbTempsIncidents;
    private javax.swing.JLabel lbGreve;
    private javax.swing.JLabel lbManif;
    private javax.swing.JLabel lbRetard;
    private javax.swing.JLabel lbTempsIncidents;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the Temps
     */
    public int getTemps() {
        return Temps;
    }

    /**
     * @return the Retard
     */
    public int getRetard() {
        return Retard;
    }

    /**
     * @return the Manifestation
     */
    public int getManifestation() {
        return Manifestation;
    }

    /**
     * @return the Greve
     */
    public int getGreve() {
        return Greve;
    }

    /**
     * @param Temps the Temps to set
     */
    public void setTemps(int Temps) {
        this.Temps = Temps;
    }

    /**
     * @param Retard the Retard to set
     */
    public void setRetard(int Retard) {
        this.Retard = Retard;
    }

    /**
     * @param Manifestation the Manifestation to set
     */
    public void setManifestation(int Manifestation) {
        this.Manifestation = Manifestation;
    }

    /**
     * @param Greve the Greve to set
     */
    public void setGreve(int Greve) {
        this.Greve = Greve;
    }

    /**
     * @return the Valide
     */
    public boolean isValide() {
        return Valide;
    }

    /**
     * @param Valide the Valide to set
     */
    public void setValide(boolean Valide) {
        this.Valide = Valide;
    }
}
