/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package InterfaceGraphique;

import Bean.EventEvent;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.NotSerializableException;
import java.io.ObjectInputStream;
import java.util.Enumeration;
import java.util.Vector;
import javax.swing.DefaultListModel;

/**
 *
 * @author Julien
 */

@SuppressWarnings("OverridableMethodCallInConstructor")
public class FenListeIncidents extends javax.swing.JDialog 
{
    private Vector<EventEvent> vecEv;
    /**
     * Creates new form FenListeIncidents
     */
    
    public FenListeIncidents(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        setTitle("Liste des incidents");
        
        LoadIncidents();
        RemplirListe();
    }
    
    public void LoadIncidents()
    {
        FileInputStream FIS;
        String sep = System.getProperty("file.separator");
        String repHome = System.getProperty("user.home");
        String chemin = repHome + sep + "Documents" + sep + "NetBeansProjects" + sep + "Applic_Gare" + sep + "AlarmBeanVector.dat";
        try 
        {
            FIS = new FileInputStream(chemin);
            try
            {
                ObjectInputStream OIS = new ObjectInputStream(FIS);
                vecEv = (Vector<EventEvent>)OIS.readObject();
                OIS.close();
            }
            catch(NotSerializableException ex)
            {
                System.out.println("NotSerializableException > " + ex.getMessage());
            }
            catch (IOException ex)
            {
                System.out.println("IOException > " + ex.getMessage());
            }
            catch (ClassNotFoundException ex)
            {
                System.out.println("ClassNotFoundException > " + ex.getMessage());
            }
        } 
        catch (FileNotFoundException ex) 
        {
            System.out.println("FileNotFoundException > " + ex.getMessage());
        }
    }
    
    public void RemplirListe()
    {
        Enumeration e = vecEv.elements();
        DefaultListModel DLM = new DefaultListModel();

        while (e.hasMoreElements())
        {
            EventEvent Ev = (EventEvent)e.nextElement();
            DLM.addElement(Ev);
        }
        listIncidents.setModel(DLM);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listIncidents = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        listIncidents.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listIncidents);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenListeIncidents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenListeIncidents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenListeIncidents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenListeIncidents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FenListeIncidents dialog = new FenListeIncidents(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listIncidents;
    // End of variables declaration//GEN-END:variables
}
